#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/hid_usage.h>
#include <dt-bindings/zmk/hid_usage_pages.h>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/bt.h>


&mt { tapping_term_ms = <300>; };

#define PT_BSLS GRAVE          // (backslash)
#define PT_1 N1              // 1
#define PT_2 N2              // 2
#define PT_3 N3              // 3
#define PT_4 N4              // 4
#define PT_5 N5              // 5
#define PT_6 N6              // 6
#define PT_7 N7              // 7
#define PT_8 N8              // 8
#define PT_9 N9              // 9
#define PT_0 N0              // 0
#define PT_QUOT MINUS        // '
#define PT_LDAQ EQUAL        // «
#define PT_Q Q               // Q
#define PT_W W               // W
#define PT_E E               // E
#define PT_R R               // R
#define PT_T T               // T
#define PT_Y Y               // Y
#define PT_U U               // U
#define PT_I I               // I
#define PT_O O               // O
#define PT_P P               // P
#define PT_PLUS LBRC         // +
#define PT_ACUT RBRC         // ´ (dead)
#define PT_A A               // A
#define PT_S S               // S
#define PT_D D               // D
#define PT_F F               // F
#define PT_G G               // G
#define PT_H H               // H
#define PT_J J               // J
#define PT_K K               // K
#define PT_L L               // L
#define PT_CCED SEMI         // Ç
#define PT_MORD SQT          // º
#define PT_TILD NUHS         // ~ (dead)
#define PT_LABK NUBS         // <
#define PT_Z Z               // Z
#define PT_X X               // X
#define PT_C C               // C
#define PT_V V               // V
#define PT_B B               // B
#define PT_N N               // N
#define PT_M M               // M
#define PT_COMM COMMA        // ,
#define PT_DOT DOT           // .
#define PT_MINS SLASH        // -


#define PT_PIPE RS(GRAVE)      // |
#define PT_EXLM RS(N1)     // !
#define PT_DQUO RS(N2)     // "
#define PT_HASH RS(N3)     // #
#define PT_DLR RS(N4)      // $
#define PT_PERC RS(N5)     // %
#define PT_AMPR RS(N6)     // &
#define PT_SLSH RS(N7)     // /
#define PT_LPRN RS(N8)     // (
#define PT_RPRN RS(N9)     // )
#define PT_EQL RS(N0)      // =:
#define PT_QUES RS(PT_QUOT)  // ?
#define PT_RDAQ RS(PT_LDAQ)  // »
#define PT_ASTR RS(PT_PLUS)  // *
#define PT_GRV RS(PT_ACUT)   // ` (dead)
#define PT_FORD RS(PT_MORD)  // ª
#define PT_CIRC RS(PT_TILD)  // ^ (dead)
#define PT_RABK RS(PT_LABK)  // >
#define PT_SCLN RS(PT_COMM)  // ;
#define PT_COLN RS(PT_DOT)   // :
#define PT_UNDS RS(PT_MINS)  // _
#define PT_AT RA(PT_2)       // @
#define PT_PND RA(PT_3)      // £
#define PT_SECT RA(PT_4)     // §
#define PT_LCBR RA(PT_7)     // {
#define PT_LBRC RA(PT_8)     // [
#define PT_RBRC RA(PT_9)     // ]
#define PT_RCBR RA(PT_0)     // }
#define PT_DIAE RA(PT_PLUS)  // ¨ (dead)
#define PT_EURO RA(PT_E)     // €

//***************** default_layer
// |  Q  |  W  |  E  |  R  |  T  |             |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |             |  H  |  J  |  K  |  L  |  Ç  |
// |  Z  |  X  |  C  |  V  |  B  |             |  N  |  M  |  ,  |  .  |  -  |
//             |  4  |  1  |BCSPC|             |SPACE|  2  |  3  |


//***************** num_layer
// |  F1 | F2  |  F3 | F4  | F5  |             | F6  | F7  | F8  | F9  | F10 |
// |  1  |  2  |  3  |  4  |  5  |             |  6  |  7  |  8  |  9  |  0  |
// | F11 | F12 |     |     |     |             |     |     |     |     |     |
//             |  4  |  1  | DEL |             | ENT |  2  |  3  |

//***************** symb_layer
// | ESQ |  "  |  #  |  $  |  %  |             |  &  |  \  |  <  |  >  |  =  |
// | TAB |  @  |  £  |  §  |     |             |     |  |  |     |  +  |  '  |
// |     |     |     |     |     |             |     |  /  |     |  º  |  ~  |
//             |  4  |  1  | DEL |             | ENT |  2  |  3  |

//***************** symb_layer2
// |  !  |     |     |  €  |     |             |  {  |  }  |  «  |  »  |  ?  |
// |     |     |     |     |     |             |  (  |  )  |     |  *  |  `  |
// |     |     |     |     |     |             |  [  |  ]  |     |  ª  |  ^  |
//             |  4  |  1  | DEL |             | ENT |  2  |  3  |

//***************** extra_layer
// |BTCLR|     |  Up |     | PGUP|             |PRINT| <-- | P/R | --> |     |
// |     | LFT | Dwn | RGT |     |             |     | -vl | nvl | +vl |     |
// |     |     |     |     |PGDWN|             | INS | HOME| END |     |     |
//             |  4  |  1  | DEL |             | ENT |  2  |  3  |

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <    
&trans  &kp Q                   &kp W                       &kp E                   &kp R                   &kp T              &kp Y               &kp U                        &kp I                   &kp O                       &kp P                       &trans
&trans  &mt LEFT_SHIFT A        &mt LEFT_CONTROL S          &mt LEFT_META D         &mt LEFT_ALT F          &kp G              &kp H               &mt RIGHT_ALT J              &mt LEFT_META K         &mt RIGHT_CONTROL L         &mt RIGHT_SHIFT PT_CCED     &trans
&trans  &kp Z                   &kp X                       &kp C                   &kp V                   &kp B              &kp N               &kp M                        &kp PT_COMM             &kp PT_DOT                  &kp PT_MINS                 &trans
                                                            &mo 4                   &mo 1                   &kp BACKSPACE      &kp SPACE           &mo 2                        &mo 3    
            >;  
        };

        // Num layer
        num_layer {
            bindings = <
&trans  &kp F1                  &kp F2                      &kp F3                  &kp F4                  &kp F5             &kp F6              &kp F7                       &kp F8                  &kp F9                      &kp F10                     &trans
&trans  &mt LEFT_SHIFT PT_1     &mt LEFT_CONTROL PT_2       &mt LEFT_META PT_3      &mt LEFT_ALT PT_4       &kp PT_5           &kp PT_6            &mt RIGHT_ALT PT_7           &mt LEFT_META PT_8      &mt RIGHT_CONTROL PT_9      &mt RIGHT_SHIFT PT_0        &trans
&trans  &kp F11                 &kp F12                     &trans                  &trans                  &trans             &trans              &trans                       &trans                  &trans                      &trans                      &trans
                                                            &mo 4                   &mo 1                   &kp DEL            &kp ENTER           &mo 2                        &mo 3
            >;
        };

        // Symb layer
        symb_layer {
            bindings = <
&trans  &kp ESCAPE              &kp PT_DQUO                 &kp PT_HASH             &kp PT_DLR              &kp PT_PERC        &kp PT_AMPR        &kp PT_BSLS                   &kp PT_LABK             &kp PT_RABK                 &kp PT_EQL                  &trans
&trans  &mt LEFT_SHIFT TAB      &mt LEFT_CONTROL PT_AT      &mt LEFT_META PT_PND    &mt LEFT_ALT PT_SECT    &trans             &trans             &mt RIGHT_ALT PT_PIPE         &trans                  &trans                      &trans                      &trans
&trans  &trans                  &trans                      &kp PT_CCED             &trans                  &trans             &trans             &kp PT_SLSH                   &trans                  &kp PT_FORD                 &kp PT_TILD                 &trans
                                                            &mo 4                   &mo 1                   &kp DEL            &kp ENTER          &mo 2                         &mo 3
            >;
        };


        // Symb layer 2
        symb_layer2 {
            bindings = <
&trans  &kp PT_EXLM             &trans                      &trans                  &kp PT_EURO             &trans             &kp PT_LCBR              &kp PT_RCBR             &kp PT_LDAQ             &kp PT_RDAQ                 &kp PT_QUES                 &trans
&trans  &trans                  &trans                      &trans                  &trans                  &trans             &mt RIGHT_ALT PT_LPRN    &mt LEFT_META PT_RPRN   &trans                  &trans                      &trans                      &trans
&trans  &trans                  &trans                      &trans                  &trans                  &trans             &kp PT_LBRC              &kp PT_RBRC             &trans                  &trans                      &trans                      &trans
                                                            &mo 4                   &mo 1                   &kp DEL            &kp ENTER                &mo 2                   &mo 3
            >;
        };

        // Extra layer
        extra_layer {
            bindings = <
&trans  &bt BT_CLR_ALL          &trans                      &kp UP                  &trans                 &kp PAGE_UP        &kp PRINTSCREEN           &kp C_PREV              &kp C_PLAY_PAUSE        &kp C_NEXT                  &bt BT_NXT                  &trans
&trans  &trans                  &kp LEFT                    &kp DOWN                &kp RIGHT              &trans             &trans                    &kp C_VOL_UP            &kp C_MUTE              &kp C_VOL_DN                &trans                      &trans
&trans  &trans                  &trans                      &trans                  &trans                 &kp PAGE_DOWN      &kp INS                   &kp HOME                &kp END                 &trans                      &trans                      &trans
                                                            &mo 4                   &mo 1                  &kp DEL            &kp ENTER                 &mo 2                   &mo 3
            >;
           };
    };
};      